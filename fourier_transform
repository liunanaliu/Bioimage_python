import cv2
from matplotlib import pyplot as plt
import numpy as np

#generate a 2D sine wave image
x = np.arange(256)
#henerate values from 0 to 255, which is the real size of image
y = np.sin(2*np.pi*x/3)
#calculate sine of x values
#divide by a smaller number above to increase the frequency
y += max(y)
#offset sine wave by the max value to go out of negative range of sine

#generate a 256 * 256 image (2D array of teh sine wave)
img = np.array([[y[j]*127 for j in range(256)]
                for i in range(256)],
               dtype=np.uint8)

plt.imshow(img)
img = np.rot90(img)
#rotate img by 90 degrees

img = cv2.imread('/home/l33/Documents/spyder_bioimage/images/Sandstone_Versa0180_image.tif',
                 0)

dft = cv2.dft(np.float32(img),
              flags=cv2.DFT_COMPLEX_OUTPUT)

#plt.imshow(dft)
#Invalid shape (1024, 996, 2) for image data

dft_shift = np.fft.fftshift(dft)
#without shifting the data could be centered around origin at the top left
#shifting it moves the origin to the center of image

manitude_spectrum = 20 * np.log((cv2.magnitude(dft_shift[:,:,0],
                                              dft_shift[:,:,1])))
#calcuate magnitude spectrum from the dft (real part and imaginary part)
#add 1 as we may see 0 values and log of 0 is indeterminate
fig = plt.figure(figsize=(12,12))
ax1 = fig.add_subplot(2,2,1)
ax1.imshow(img)
ax1.title.set_text('input image')
ax2 = fig.add_subplot(2,2,2)
ax2.imshow(manitude_spectrum)
ax2.title.set_text('FFT of image')
plt.show()
