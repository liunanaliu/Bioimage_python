import cv2
import numpy as np
from matplotlib import pyplot as plt
from scipy import ndimage
from skimage import measure, color, io

img1 = cv2.imread('images/Osteosarcoma_01.tif')
img = img1[:,:,0]
#blue channel

cv2.imshow('blue',img)

pixel_to_um = 0.454

ret1, thresh = cv2.threshold(img, 0, 255, cv2.THRESH_BINARY+cv2.THRESH_OTSU)

kernel = np.ones((3,3),np.uint8)

opening = cv2.morphologyEx(thresh, cv2.MORPH_OPEN, kernel, iterations = 2)

from skimage.segmentation import clear_border

opening = clear_border(opening)

sure_bg = cv2.dilate(opening, kernel, iterations = 10)
#iterations = 10 becaused of lots of background

cv2.imshow('sure_bg', sure_bg)

dist_transform = cv2.distanceTransform(opening, cv2.DIST_L2, 3)

ret2, sure_fg = cv2.threshold(dist_transform, 0.5*dist_transform.max(), 255, 0)

sure_fg = np.uint8(sure_fg)

cv2.imshow('sure_fg',sure_fg)

unknown = cv2.subtract(sure_bg, sure_fg)

ret3, markers = cv2.connectedComponents(sure_fg)

markers = markers + 10

markers[unknown==255] = 0

markers = cv2.watershed(img1, markers)

img1[markers==-1] = [0, 255, 255]

img2 = color.label2rgb(markers,bg_label=0)

cv2.imshow('overlay raw', img1)
cv2.imshow('colored grain', img2)

#not ideal, need to find optimal parameter to include all nucleis.
