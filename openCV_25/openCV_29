import cv2
import numpy as np

img = cv2.imread('/home/l33/Documents/spyder_bioimage/images/monalisa.jpg')

gray = cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)
gray = np.float32(gray)

harris = cv2.cornerHarris(gray, 2, 3, 0.04)

img[harris>0.01*harris.max()] = [255,0,0]

cv2.imshow('raw',img)
cv2.imshow('harris',img)

###################################################################
img = cv2.imread('/home/l33/Documents/spyder_bioimage/images/monalisa.jpg')

gray = cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)

corners = cv2.goodFeaturesToTrack(gray, 25, 0.01, 10)
corners = np.int0(corners)

for i in corners:
    x,y = i.ravel()
    print (x,y)
    cv2.circle(img, (x,y), 3, 255, -1)
    
cv2.imshow('corners',img)

############################################################################
img = cv2.imread('/home/l33/Documents/spyder_bioimage/images/monalisa.jpg',0)

#initiate fast object with default values
detector = cv2.FastFeatureDetector_create(50)
#detect 50 features

kp = detector.detect(img,None)

img2 = cv2.drawKeypoints(img, kp, None, flags=0)

cv2.imshow('corners',img2)

#####################################################################
#fast detector
#BRIEF descriptor
#ORB combination, both in one
import numpy as np
img = cv2.imread('/home/l33/Documents/spyder_bioimage/images/monalisa.jpg',0)

orb = cv2.ORB_create(50)

kp, des = orb.detectAndCompute(img, None)

img2 = cv2.drawKeypoints(img, kp, None, flags=0)

img2 = cv2.drawKeypoints(img, kp, None, flags=cv2.DRAW_MATCHES_FLAGS_DRAW_RICH_KEYPOINTS)

cv2.imshow('orb',img2)
